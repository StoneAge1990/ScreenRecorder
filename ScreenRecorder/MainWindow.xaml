<Window x:Class="ScreenRecorder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:ScreenRecorder"
        xmlns:mediaEncoder="clr-namespace:MediaEncoder;assembly=MediaEncoder"
        xmlns:properties="clr-namespace:ScreenRecorder.Properties"
        xmlns:cc="clr-namespace:CustomConverter"
        mc:Ignorable="d"
        Icon="pack://application:,,,/icon.ico" SnapsToDevicePixels="True"
        Left="{Binding Source={x:Static local:AppConfig.Instance}, Path=WindowLeft, Mode=TwoWay}"
        Top="{Binding Source={x:Static local:AppConfig.Instance}, Path=WindowTop, Mode=TwoWay}"
        WindowStyle="None" ResizeMode="CanMinimize" Background="Transparent" AllowsTransparency="False" Topmost="True" WindowStartupLocation="Manual"
        Title="" Height="72" MinWidth="240" SizeToContent="Width">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <cc:BitrateFormatter x:Key="bitrateFormatter" />
            <cc:InvertBooleanConverter x:Key="invertBooleanConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Border
        CornerRadius="0"
        Background="#454545"
        BorderBrush="Black"
        BorderThickness="1"
        MouseDown="Border_MouseDown"
        >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.Column="0"
                Margin="5 5 3 5"
                CornerRadius="2"
                Background="#212121"
                BorderBrush="Black"
                BorderThickness="1"
                >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid
                        Grid.Column="0"
                        Grid.Row="0"
                        Grid.ColumnSpan="3"
                        >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            VerticalAlignment="Center"
                            FontWeight="Bold"
                            Margin="6 3 0 3"
                            >
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Text" Value="{x:Static properties:Resources.EncoderStatusStopMessage}" />
                                    <Setter Property="Foreground" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Source={x:Static local:AppManager.Instance}, Path=ScreenEncoder.IsStarted, Mode=OneWay}" Value="True">
                                            <Setter Property="Text" Value="Timer ..." />
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Source={x:Static local:AppManager.Instance}, Path=ScreenEncoder.IsStartedWithEncode, Mode=OneWay}" Value="True">
                                            <Setter Property="Text" Value="{x:Static properties:Resources.EncoderStatusStartMessage}" />
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Source={x:Static local:AppManager.Instance}, Path=ScreenEncoder.IsPaused, Mode=OneWay}" Value="True">
                                            <Setter Property="Text" Value="{x:Static properties:Resources.EncoderStatusPauseMessage}" />
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal" Margin="0,0,2,0">
                            <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Content="{StaticResource Icon_CursorClick}" Foreground="DarkGray" Focusable="False" ToolTip="{x:Static properties:Resources.CaptureRegionByUserSelection}" Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=SelectRegionCommand}" CommandParameter="{x:Static local:CaptureTarget.ByUserChoiceTargetDeviceName}" Width="20" Height="20" Margin="1,0,1,0" IsEnabled="{Binding Source={x:Static local:AppManager.Instance}, Converter={StaticResource invertBooleanConverter}, Path=ScreenEncoder.IsStarted, Mode=OneWay}" />
                            <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Content="{StaticResource Icon_FolderOpen}" Foreground="DarkGray" Focusable="False" ToolTip="{x:Static properties:Resources.OpenEncodingFolderInFileExplorer}" Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=OpenRecordDirecotryCommand}" Width="20" Height="20" Margin="1,0,1,0" IsEnabled="{Binding Source={x:Static local:AppManager.Instance}, Converter={StaticResource invertBooleanConverter}, Path=ScreenEncoder.IsStarted, Mode=OneWay}" />
                            <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Content="{StaticResource Icon_WindowMinimize}" Foreground="DarkGray" Focusable="False" ToolTip="Minimize to system tray" Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=WindowMinimizeCommand}" Width="20" Height="20" Margin="1,0,1,0" ToolTipOpening="Button_ToolTipOpening"/>
                        </StackPanel>
                    </Grid>


                    <Grid
                        Grid.Column="0"
                        Grid.Row="1"
                        Margin="3 3 1 3"
                        >
                        <Viewbox>
                            <Viewbox.Style>
                                <Style TargetType="{x:Type Viewbox}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Source={x:Static local:AppManager.Instance}, Path=ScreenEncoder.IsStarted, Mode=OneWay}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Viewbox.Style>
                            <Button Width="30" Height="30" Focusable="False" Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=StartScreenRecordCommand}" ToolTip="{x:Static properties:Resources.StartRecording}" ToolTipOpening="Button_ToolTipOpening">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <Grid
                                                    Width="22"
                                                    Height="22"
                                                    >
                                                    <Ellipse StrokeThickness="2">
                                                        <Ellipse.Stroke>
                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                <GradientStop Color="#902020" Offset="0.0" />
                                                                <GradientStop Color="#702020" Offset="0.5" />
                                                                <GradientStop Color="#502020" Offset="1.0" />
                                                            </LinearGradientBrush>
                                                        </Ellipse.Stroke>
                                                    </Ellipse>
                                                    <Ellipse
                                                        Margin="4"
                                                        StrokeThickness="0"
                                                        >
                                                        <Ellipse.Fill>
                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                <GradientStop Color="Red" Offset="0.0" />
                                                                <GradientStop Color="#702020" Offset="0.5" />
                                                                <GradientStop Color="DarkRed" Offset="1.0" />
                                                            </LinearGradientBrush>
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                                                </Grid>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Viewbox>

                        <Viewbox>
                            <Viewbox.Style>
                                <Style TargetType="{x:Type Viewbox}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Source={x:Static local:AppManager.Instance}, Path=ScreenEncoder.IsStarted, Mode=OneWay}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Viewbox.Style>
                            <Button Width="30" Height="30" Focusable="False" Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=PauseScreenRecordCommand}" ToolTip="{x:Static properties:Resources.PauseRecording}" ToolTipOpening="Button_ToolTipOpening">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <Rectangle
                                                        Grid.Column="0"
                                                        Width="7"
                                                        Height="18"
                                                        StrokeThickness="1"
                                                        Margin="0 0 2 0"
                                                        >
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                <GradientStop Color="Red" Offset="0.0" />
                                                                <GradientStop Color="#702020" Offset="0.5" />
                                                                <GradientStop Color="DarkRed" Offset="1.0" />
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                        <Rectangle.Stroke>
                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                <GradientStop Color="#902020" Offset="0.0" />
                                                                <GradientStop Color="#702020" Offset="0.5" />
                                                                <GradientStop Color="#502020" Offset="1.0" />
                                                            </LinearGradientBrush>
                                                        </Rectangle.Stroke>
                                                    </Rectangle>
                                                    <Rectangle
                                                        Grid.Column="1"
                                                        Width="7"
                                                        Height="18"
                                                        StrokeThickness="1"
                                                        Margin="2 0 0 0"
                                                        >
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                <GradientStop Color="Red" Offset="0.0" />
                                                                <GradientStop Color="#702020" Offset="0.5" />
                                                                <GradientStop Color="DarkRed" Offset="1.0" />
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                        <Rectangle.Stroke>
                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                <GradientStop Color="#902020" Offset="0.0" />
                                                                <GradientStop Color="#702020" Offset="0.5" />
                                                                <GradientStop Color="#502020" Offset="1.0" />
                                                            </LinearGradientBrush>
                                                        </Rectangle.Stroke>
                                                    </Rectangle>
                                                </Grid>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Viewbox>
                    </Grid>
                    <Grid
                        Grid.Column="1"
                        Grid.Row="1"
                        Margin="1 3 3 3"
                        >
                        <Viewbox>
                            <Viewbox.Style>
                                <Style TargetType="{x:Type Viewbox}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Source={x:Static local:AppManager.Instance}, Path=ScreenEncoder.IsStopped, Mode=OneWay}" Value="False">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Viewbox.Style>
                            <Button Width="30" Height="30" Focusable="False" Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=StopScreenRecordCommand}" ToolTip="{x:Static properties:Resources.StopRecording}" ToolTipOpening="Button_ToolTipOpening">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <Rectangle
                                                    Width="18"
                                                    Height="18"
                                                    StrokeThickness="1"
                                                    >
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                            <GradientStop Color="Red" Offset="0.0" />
                                                            <GradientStop Color="#702020" Offset="0.5" />
                                                            <GradientStop Color="DarkRed" Offset="1.0" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                    <Rectangle.Stroke>
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                            <GradientStop Color="#902020" Offset="0.0" />
                                                            <GradientStop Color="#702020" Offset="0.5" />
                                                            <GradientStop Color="#502020" Offset="1.0" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Stroke>
                                                </Rectangle>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Rectangle
                                                            Width="15"
                                                            Height="15"
                                                            StrokeThickness="1"
                                                            >
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                    <GradientStop Color="Gray" Offset="0.0" />
                                                                    <GradientStop Color="#202020" Offset="0.5" />
                                                                    <GradientStop Color="DarkGray" Offset="1.0" />
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                            <Rectangle.Stroke>
                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                    <GradientStop Color="#909090" Offset="0.0" />
                                                                    <GradientStop Color="#202020" Offset="0.5" />
                                                                    <GradientStop Color="#505050" Offset="1.0" />
                                                                </LinearGradientBrush>
                                                            </Rectangle.Stroke>
                                                        </Rectangle>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Viewbox>
                    </Grid>

                    <Border
                        Grid.Column="2"
                        Grid.Row="1"
                        CornerRadius="5"
                        Background="#101010"
                        Margin="0 3 3 3"
                        >
                        <Grid>
                            <TextBlock
                                Text="{Binding Source={x:Static local:AppManager.Instance}, Path=EncodeTime, Mode=OneWay}"
                                FontSize="16"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Margin="5 2 5 2"
                                TextOptions.TextFormattingMode="Display"
                                FontFamily="Franklin Gothic Medium"
                                />
                        </Grid>
                    </Border>
                </Grid>
            </Border>

            <Grid
                Grid.Column="1"
                Margin="0 5 3 5"
                >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button Grid.Column="0" Grid.Row="0" Margin="3" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Content="{StaticResource Icon_Close}" Foreground="DarkGray" Focusable="False" ToolTip="{x:Static properties:Resources.Exit}" ToolTipOpening="Button_ToolTipOpening" Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=WindowCloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <Grid Grid.Column="0" Grid.Row="1">
                    <ToggleButton Name="recordSetting" Focusable="False" IsChecked="{Binding Source={x:Static local:AppManager.Instance}, Path=RecordSettingChecked}" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{StaticResource Icon_Settings}" ToolTip="{x:Static properties:Resources.EncoderSettings}" Foreground="DarkGray" Margin="3" IsEnabled="{Binding Source={x:Static local:AppManager.Instance}, Converter={StaticResource invertBooleanConverter}, Path=ScreenEncoder.IsStarted, Mode=OneWay}" />
                    <Popup StaysOpen="False" IsOpen="{Binding Path=IsChecked, ElementName=recordSetting, Mode=TwoWay}" Placement="Bottom" local:PopupAttachedProperty.DisplayedOnlyMonitor="True">
                        <Border MinWidth="400" BorderThickness="1" BorderBrush="Black" Background="#434343" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border
                                    Grid.Column="0"
                                    Grid.Row="0"
                                    BorderThickness="0 0 0 1"
                                    BorderBrush="Black"
                                    Background="#212121"
                                    Margin="0 0 0 0"
                                    >
                                    <Grid Margin="3">
                                        <TextBlock
                                            Text="{x:Static properties:Resources.EncoderSettings}"
                                            Foreground="White"
                                            VerticalAlignment="Center"
                                            Margin="3 0"
                                            />

                                        <StackPanel
                                            HorizontalAlignment="Right"
                                            Orientation="Horizontal"
                                            >
                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                    <Setter Property="Foreground" Value="DarkGray" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="Margin" Value="3 0 0 0" />
                                                    <Setter Property="Width" Value="25" />
                                                    <Setter Property="Height" Value="25" />
                                                </Style>
                                            </StackPanel.Resources>
                                            <Button
                                                Content="{StaticResource Icon_Keyboard}"
                                                Focusable="False"
                                                ToolTip="{x:Static properties:Resources.ShortcutSettings}"
                                                Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=OpenShortcutSettingsCommand, Mode=OneWay}"
                                                />
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <Grid
                                    Grid.Column="0"
                                    Grid.Row="1"
                                    >
                                    <Border
                                        Margin="5"
                                        CornerRadius="2"
                                        Background="#212121"
                                        BorderBrush="Black"
                                        BorderThickness="1"
                                        >
                                        <Grid IsEnabled="{Binding Source={x:Static local:AppManager.Instance}, Path=ScreenEncoder.IsStopped, Mode=OneWay}">
                                            <Grid.Resources>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="TextAlignment" Value="Right" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </Style>
                                                <Style TargetType="{x:Type RowDefinition}">
                                                    <Setter Property="Height" Value="Auto" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="AdvancedSettings" />
                                                                <Condition Binding="{Binding Source={x:Static local:AppConfig.Instance}, Path=AdvancedSettings, Mode=OneWay}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Height" Value="0" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                                <Style TargetType="{x:Type Grid}">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="AdvancedSettings" />
                                                                <Condition Binding="{Binding Source={x:Static local:AppConfig.Instance}, Path=AdvancedSettings, Mode=OneWay}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Resources>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Tag="AdvancedSettings" /> <!-- Video Codec -->
                                                <RowDefinition />                        <!-- Video Bitrate -->
                                                <RowDefinition Tag="AdvancedSettings" /> <!-- Audio Codec -->
                                                <RowDefinition />                        <!-- Audio Bitrate -->
                                                <RowDefinition Tag="AdvancedSettings" /> <!-- Frame Rate -->
                                                <RowDefinition />                        <!-- Capture Display -->
                                                <RowDefinition />                        <!-- Capture Display Position and Size -->
                                                <RowDefinition Tag="AdvancedSettings"/>  <!-- Capture Display Resize during window selection -->
                                                <RowDefinition />                        <!-- Recording Path -->
                                                <RowDefinition Tag="AdvancedSettings"/>  <!-- Capture time controlled -->
                                                <RowDefinition />                        <!-- ETC Options -->
                                                <RowDefinition />                        <!-- Warning -->
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static properties:Resources.EncoderFileFormat}" Margin="3" />
                                            <TextBlock Grid.Column="0" Grid.Row="1" Text="{x:Static properties:Resources.EncoderVideoCodec}" Margin="3" />
                                            <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static properties:Resources.EncoderVideoBitrate}" Margin="3" />
                                            <TextBlock Grid.Column="0" Grid.Row="3" Text="{x:Static properties:Resources.EncoderAudioCodec}" Margin="3" />
                                            <TextBlock Grid.Column="0" Grid.Row="4" Text="{x:Static properties:Resources.EncoderAudioBitrate}" Margin="3" />
                                            <TextBlock Grid.Column="0" Grid.Row="5" Text="{x:Static properties:Resources.EncoderFrameRate}" Margin="3" />
                                            <TextBlock Grid.Column="0" Grid.Row="6" Text="{x:Static properties:Resources.EncoderCaptureDisplay}" Margin="3" />
                                            <TextBlock Grid.Column="0" Grid.Row="9" Text="{x:Static properties:Resources.EncoderBaseDirectory}" Margin="3" />
                                            <TextBlock Grid.Column="0" Grid.Row="10" Text="TimeControlled" Margin="3" />

                                            <ComboBox
                                                Grid.Column="1"
                                                Grid.Row="0"
                                                Margin="3"
                                                ItemsSource="{Binding Source={x:Static local:AppManager.Instance}, Path=EncoderFormats, Mode=OneWay}"
                                                SelectedValuePath="Format"
                                                DisplayMemberPath="Name"
                                                SelectedValue="{Binding Source={x:Static local:AppConfig.Instance}, Path=SelectedRecordFormat, Mode=TwoWay}"
                                                />
                                            <ComboBox
                                                Grid.Column="1"
                                                Grid.Row="1"
                                                Margin="3"
                                                ItemsSource="{Binding Source={x:Static local:AppManager.Instance}, Path=EncoderVideoCodecs, Mode=OneWay}"
                                                SelectedValuePath="VideoCodec"
                                                DisplayMemberPath="Name"
                                                SelectedValue="{Binding Source={x:Static local:AppConfig.Instance}, Path=SelectedRecordVideoCodec, Mode=TwoWay}"
                                                IsEnabled="{Binding Source={x:Static local:AppConfig.Instance}, Path=AdvancedSettings, Mode=OneWay}"
                                                />
                                            <ComboBox
                                                Grid.Column="1"
                                                Grid.Row="2"
                                                Margin="3"
                                                Name="comboBox_videoBitrate"
                                                SelectedItem="{Binding Source={x:Static local:AppConfig.Instance}, Path=SelectedRecordVideoBitrate, Mode=TwoWay}"
                                                >
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Converter={StaticResource bitrateFormatter}}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <ComboBox.Items>
                                                    <sys:Int32>1000000</sys:Int32>
                                                    <sys:Int32>2000000</sys:Int32>
                                                    <sys:Int32>3000000</sys:Int32>
                                                    <sys:Int32>4000000</sys:Int32>
                                                    <sys:Int32>5000000</sys:Int32>
                                                    <sys:Int32>6000000</sys:Int32>
                                                    <sys:Int32>7000000</sys:Int32>
                                                    <sys:Int32>8000000</sys:Int32>
                                                    <sys:Int32>9000000</sys:Int32>
                                                    <sys:Int32>10000000</sys:Int32>
                                                    <sys:Int32>15000000</sys:Int32>
                                                    <sys:Int32>20000000</sys:Int32>
                                                    <sys:Int32>30000000</sys:Int32>
                                                </ComboBox.Items>
                                            </ComboBox>
                                            <ComboBox
                                                Grid.Column="1"
                                                Grid.Row="3"
                                                Margin="3"
                                                ItemsSource="{Binding Source={x:Static local:AppManager.Instance}, Path=EncoderAudioCodecs, Mode=OneWay}"
                                                SelectedValuePath="AudioCodec"
                                                DisplayMemberPath="Name"
                                                SelectedValue="{Binding Source={x:Static local:AppConfig.Instance}, Path=SelectedRecordAudioCodec, Mode=TwoWay}"
                                                IsEnabled="{Binding Source={x:Static local:AppConfig.Instance}, Path=AdvancedSettings, Mode=OneWay}"
                                                />
                                            <ComboBox
                                                Grid.Column="1"
                                                Grid.Row="4"
                                                Margin="3"
                                                SelectedItem="{Binding Source={x:Static local:AppConfig.Instance}, Path=SelectedRecordAudioBitrate, Mode=TwoWay}"
                                                >
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Converter={StaticResource bitrateFormatter}}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <ComboBox.Items>
                                                    <sys:Int32>64000</sys:Int32>
                                                    <sys:Int32>128000</sys:Int32>
                                                    <sys:Int32>160000</sys:Int32>
                                                    <sys:Int32>192000</sys:Int32>
                                                    <sys:Int32>320000</sys:Int32>
                                                </ComboBox.Items>
                                            </ComboBox>
                                            <ComboBox
                                                Grid.Column="1"
                                                Grid.Row="5"
                                                Margin="3"
                                                SelectedItem="{Binding Source={x:Static local:AppConfig.Instance}, Path=SelectedRecordFrameRate, Mode=TwoWay}"
                                                ItemStringFormat="0 fps"
                                                >
                                                <ComboBox.Items>
                                                    <sys:Int32>15</sys:Int32>
                                                    <sys:Int32>24</sys:Int32>
                                                    <sys:Int32>25</sys:Int32>
                                                    <sys:Int32>30</sys:Int32>
                                                    <sys:Int32>48</sys:Int32>
                                                    <sys:Int32>50</sys:Int32>
                                                    <sys:Int32>60</sys:Int32>
                                                    <sys:Int32>120</sys:Int32>
                                                    <sys:Int32>144</sys:Int32>
                                                </ComboBox.Items>
                                            </ComboBox>
                                            <Grid Grid.Column="1" Grid.Row="6">
                                              <StackPanel Grid.Column="1" Grid.Row="7" Orientation="Horizontal" HorizontalAlignment="Left">
                                                    <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Content="{StaticResource Icon_CursorClick}" Foreground="DarkGray" ToolTip="{x:Static properties:Resources.CaptureRegionByUserSelection}" Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=SelectRegionCommand}" CommandParameter="{x:Static local:CaptureTarget.ByUserChoiceTargetDeviceName}" Width="20" Height="20" Margin="3" IsEnabled="{Binding Source={x:Static local:AppManager.Instance}, Converter={StaticResource invertBooleanConverter}, Path=ScreenEncoder.IsStarted, Mode=OneWay}" />
                                                    <TextBox IsReadOnly="true" Margin="3" MinWidth="200" VerticalAlignment="Center" Text="{Binding Source={x:Static local:AppManager.Instance}, Path=ScreenCaptureMonitorDescription, Mode=OneWay}"/>
                                                </StackPanel>
                                           </Grid>
                                            <Grid Grid.Column="1" Grid.Row="7">
                                                <StackPanel Grid.Column="1" Grid.Row="7" Orientation="Horizontal" HorizontalAlignment="Left">
                                                    <TextBlock Text="Left:"  Foreground="White" VerticalAlignment="Center" Margin="5,2,0,5"/>
                                                    <TextBox Margin="3" MinWidth="40" VerticalAlignment="Center" Text="{Binding Source={x:Static local:AppConfig.Instance}, Path=ScreenCaptureRectLeft, Mode=TwoWay}"/>
                                                    <TextBlock Text="Top:" Foreground="White" VerticalAlignment="Center" Margin="5,2,0,5"/>
                                                    <TextBox Margin="3" MinWidth="40" VerticalAlignment="Center" Text="{Binding Source={x:Static local:AppConfig.Instance}, Path=ScreenCaptureRectTop, Mode=TwoWay}"/>
                                                    <TextBlock Text="Width:"  Foreground="White" VerticalAlignment="Center" Margin="5,2,0,5"/>
                                                    <TextBox Margin="3" MinWidth="40" VerticalAlignment="Center" Text="{Binding Source={x:Static local:AppConfig.Instance}, Path=ScreenCaptureRectWidth, Mode=TwoWay}"/>
                                                    <TextBlock Text="Height:" Foreground="White" VerticalAlignment="Center" Margin="5,2,0,5"/>
                                                    <TextBox Margin="3" MinWidth="40" VerticalAlignment="Center" Text="{Binding Source={x:Static local:AppConfig.Instance}, Path=ScreenCaptureRectHeight, Mode=TwoWay}"/>
                                                </StackPanel>
                                            </Grid>
                                            <Grid Grid.Column="1" Grid.Row="8">
                                                <StackPanel Grid.Column="1" Grid.Row="7" Orientation="Horizontal" HorizontalAlignment="Left">
                                                    <CheckBox Content="Resize Window During Selection" IsChecked="{Binding Source={x:Static local:AppConfig.Instance}, Path=ForceSourceSize, Mode=TwoWay}" Foreground="White" Margin="5,2,10,5" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                                    <TextBlock Text="Width:"  Foreground="White" VerticalAlignment="Center" Margin="5,2,0,5"/>
                                                    <TextBox IsEnabled="{Binding Source={x:Static local:AppConfig.Instance}, Path=ForceSourceSize}" Margin="3" MinWidth="40" PreviewTextInput="NumberValidation" VerticalAlignment="Center" Text="{Binding Source={x:Static local:AppConfig.Instance}, Path=ForcedSourceWidth, Mode=TwoWay}"/>
                                                    <TextBlock Text="Height:" Foreground="White" VerticalAlignment="Center" Margin="5,2,0,5"/>
                                                    <TextBox IsEnabled="{Binding Source={x:Static local:AppConfig.Instance}, Path=ForceSourceSize}" Margin="3" MinWidth="40" PreviewTextInput="NumberValidation" VerticalAlignment="Center" Text="{Binding Source={x:Static local:AppConfig.Instance}, Path=ForcedSourceHeight, Mode=TwoWay}"/>
                                                </StackPanel>
                                            </Grid>
                                            <Grid Grid.Column="1" Grid.Row="9">
                                                 <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="80" />
                                                </Grid.ColumnDefinitions>
                                                <TextBox
                                                    Grid.Column="0"
                                                    Grid.Row="0"
                                                    Margin="3"
                                                    VerticalAlignment="Center"
                                                    IsReadOnly="True"
                                                    Text="{Binding Source={x:Static local:AppConfig.Instance}, Path=RecordDirectory, Mode=OneWay}"
                                                    >
                                                    <TextBox.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem
                                                                Header="{x:Static properties:Resources.OpenFolderInFileExplorer}"
                                                                Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=OpenFolderInWindowExplorerCommand, Mode=OneWay}"
                                                                CommandParameter="{Binding Source={x:Static local:AppConfig.Instance}, Path=RecordDirectory, Mode=OneWay}"
                                                                />
                                                        </ContextMenu>
                                                    </TextBox.ContextMenu>
                                                </TextBox>
                                                <Button
                                                    Grid.Column="1"
                                                    Grid.Row="0"
                                                    Margin="0 3 3 3"
                                                    Content="{x:Static properties:Resources.Browse}"
                                                    Command="{Binding Source={x:Static local:AppCommands.Instance}, Path=SelectRecordDirectory, Mode=OneWay}"
                                                    />
                                            </Grid>
                                            <StackPanel Grid.Column="1" Grid.Row="10" Orientation="Horizontal" HorizontalAlignment="Left">
                                                <CheckBox Content="" IsChecked="{Binding Source={x:Static local:AppConfig.Instance}, Path=CaptureTimeControlled, Mode=TwoWay}" Margin="3,3,3,3" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                                <TextBlock Text="Start:"  Foreground="White" VerticalAlignment="Center"/>
                                                <local:TimeCtrl IsEnabled="{Binding Source={x:Static local:AppConfig.Instance}, Path=CaptureTimeControlled}" Margin="3,3,3,3" VerticalAlignment="Center" Value="{Binding Source={x:Static local:AppConfig.Instance}, Path=CaptureStartTime, Mode=TwoWay}"/>
                                                <TextBlock Text="End:"  Foreground="White" VerticalAlignment="Center"/>
                                                <local:TimeCtrl IsEnabled="{Binding Source={x:Static local:AppConfig.Instance}, Path=CaptureTimeControlled}" Margin="3,3,3,3" VerticalAlignment="Center" Value="{Binding Source={x:Static local:AppConfig.Instance}, Path=CaptureEndTime, Mode=TwoWay}"/>
                                                <CheckBox IsEnabled="{Binding Source={x:Static local:AppConfig.Instance}, Path=CaptureTimeControlled}" Content="Exit Program" Margin="3,3,3,3" IsChecked="{Binding Source={x:Static local:AppConfig.Instance}, Path=ExitProgram, Mode=TwoWay}" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                                <CheckBox IsEnabled="{Binding Source={x:Static local:AppConfig.Instance}, Path=CaptureTimeControlled}" Content="Shut Down" Margin="3,3,3,3" IsChecked="{Binding Source={x:Static local:AppConfig.Instance}, Path=ShutDown, Mode=TwoWay}" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                            </StackPanel>
                                            <StackPanel Grid.Column="0" Grid.Row="11" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                                <CheckBox Content="{x:Static properties:Resources.RecordMicrophone}" IsChecked="{Binding Source={x:Static local:AppConfig.Instance}, Path=RecordMicrophone, Mode=TwoWay}" Foreground="White" Margin="5,2,0,5" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                                <CheckBox Content="{x:Static properties:Resources.CaptureCursor}" IsChecked="{Binding Source={x:Static local:AppConfig.Instance}, Path=ScreenCaptureCursorVisible, Mode=TwoWay}" Foreground="White" Margin="5,2,0,5" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                                <CheckBox Content="{x:Static properties:Resources.AdvancedSettings}" IsChecked="{Binding Source={x:Static local:AppConfig.Instance}, Path=AdvancedSettings, Mode=TwoWay}" Foreground="White" Margin="5,2,5,5" HorizontalAlignment="Right" />
                                            </StackPanel>
                                            <Border Grid.Column="0" Grid.Row="12" Grid.ColumnSpan="2" Margin="3,3,3,6" HorizontalAlignment="Center" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3" Background="#313131">
                                                <Border.Style>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Source={x:Static local:AppConfig.Instance}, Path=AdvancedSettings, Mode=OneWay}" Value="False" />
                                                                    <Condition Binding="{Binding Source={x:Static local:AppManager.Instance}, Path=NotSupportedHwH264, Mode=OneWay}" Value="True" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Source={x:Static local:AppConfig.Instance}, Path=AdvancedSettings, Mode=OneWay}" Value="True" />
                                                                    <Condition Binding="{Binding Source={x:Static local:AppManager.Instance}, Path=NotSupportedHwH264, Mode=OneWay}" Value="True" />
                                                                    <Condition Binding="{Binding Source={x:Static local:AppConfig.Instance}, Path=SelectedRecordVideoCodec, Mode=OneWay}" Value="{x:Static mediaEncoder:VideoCodec.H264}" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Source={x:Static local:AppConfig.Instance}, Path=AdvancedSettings, Mode=OneWay}" Value="True" />
                                                                    <Condition Binding="{Binding Source={x:Static local:AppManager.Instance}, Path=NotSupportedHwHevc, Mode=OneWay}" Value="True" />
                                                                    <Condition Binding="{Binding Source={x:Static local:AppConfig.Instance}, Path=SelectedRecordVideoCodec, Mode=OneWay}" Value="{x:Static mediaEncoder:VideoCodec.H265}" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <Grid Margin="3">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ContentPresenter
                                                        Content="{StaticResource Icon_Warning}"
                                                        Margin="5"
                                                        />
                                                    <TextBlock
                                                        Text="{x:Static properties:Resources.HardwareEncoderNotFoundWarning}"
                                                        TextWrapping="WrapWithOverflow"
                                                        TextTrimming="None"
                                                        Grid.Column="1"
                                                        TextAlignment="Center"
                                                        Margin="0 0 5 0"
                                                        MaxWidth="320"
                                                        />
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                    </Popup>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>